// @import "compass";
@charset "utf-8";

// braakpoint settings ------------------------------
@mixin bp($bp_1, $bp_2: 0) {

    $bp_main: 600;

    @if $bp_1=='sp' {
        @media (max-width: #{$bp_main}px) {
            @content;
        }
    }

    @else if $bp_1=='pc' {
        @media (min-width: #{$bp_main + 1}px) {
            @content;
        }
    }

    @else {
        @if $bp_1 !=0 and $bp_2 !=0 {
            @media (min-width: $bp_1) and (max-width: $bp_2) {
                @content;
            }
        }

        @else if $bp_1==0 {
            @media (max-width: $bp_2) {
                @content;
            }
        }

        @else if $bp_2==0 {
            @media (min-width: $bp_1) {
                @content;
            }
        }
    }
}

// common mixins ------------------------------
@mixin fs($fontsize: 16, $lineheight: 30, $base: 16) {
    font-size: $fontsize + px;
    font-size: ($fontsize / $base) * 1rem;
    line-height: ($lineheight / $base) * 1rem;
}

@mixin fs-vw($fontsize: 16, $lineheight: 26, $area-width: 320) {
    font-size: #{($fontsize / $area-width) * 100}vw;
    line-height: ceil($lineheight*$pc_width_max / $fontsize) / $pc_width_max;
}

@mixin backgroundsize($w:auto, $h:auto) {
    -webkit-background-size: $w $h;
    background-size: $w $h;
}

@mixin transition($options:.2s all ease) {
    -webkit-transition: ($options);
    -moz-transition: ($options);
    -ms-transition: ($options);
    -o-transition: ($options);
    transition: ($options);
}

@mixin transform($options) {
    -webkit-transform: ($options);
    -moz-transform: ($options);
    -ms-transform: ($options);
    -o-transform: ($options);
    transform: ($options);
}

@mixin animation($options) {
    -webkit-animation: ($options);
    -moz-animation: ($options);
    -ms-animation: ($options);
    -o-animation: ($options);
    animation: ($options);
}

@mixin hover-op($val : .75) {
    opacity: 1;
    @include transition(.25s opacity);

    &:hover {
        opacity: $val;
    }
}

@mixin coverAll($pos: absolute) {
    position: $pos;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin posCenter() {
    position: absolute;
    top: 50%;
    left: 50%;
    @include transform(translate(-50%,-50%));
}

@mixin posCenterY() {
    position: absolute;
    top: 50%;
    left: 0;
    @include transform(translateY(-50%));
}

@mixin posCenterX() {
    position: absolute;
    left: 50%;
    top: 0;
    @include transform(translateX(-50%));
}

@mixin flexCenter() {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin background-gradient($color_1, $color_2) {
    background: $color_1;
    background: -moz-linear-gradient(left, $color_1 0%, $color_2 100%);
    background: -webkit-linear-gradient(left, $color_1 0%, $color_2 100%);
    background: linear-gradient(to right, $color_1 0%, $color_1 0%, $color_2 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color_1', endColorstr='$color_2', GradientType=1);
}

@mixin block($w: 100%) {
    float: left;
    width: $w;
}

@function calculateRem($size) {
    $remSize: $size / 16px;
    @return #{$remSize}rem;
}